<?php

/**
 * @file
 * Module file.
 */

/**
 * Implements hook_menu().
 */
function islandora_doi_datacite_menu() {
  $items = array();
  $items['admin/islandora/tools/islandora_doi_datacite'] = array(
    'title' => 'Islandora DOI DataCite',
    'description' => 'Configure Islandora DOI Datacite module.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_doi_datacite_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Admin settings form builder.
 */
function islandora_doi_datacite_admin_settings() {
  $form['islandora_doi_datacite_api_url'] = array(
    '#type' => 'textfield',
    '#title' => t('API endpoint'),
    '#default_value' => variable_get('islandora_doi_datacite_api_url', 'https://mds.datacite.org/'),
    '#description' => t("The DataCite MDS API endpoint host, including the trailing /. You probably don't need to change this setting."),
  );
  $form['islandora_doi_datacite_prefix'] = array(
    '#type' => 'textfield',
    '#title' => t('DOI prefix'),
    '#default_value' => variable_get('islandora_doi_datacite_prefix', '10.5072/'),
    '#description' => t("Your institution's DOI prefix, including the trailing slash. The test prefix is 10.5072/."),
  );
  $form['islandora_doi_datacite_suffix_source'] = array(
    '#type' => 'radios',
    '#title' => t('Source of DOI suffix'),
    '#default_value' => variable_get('islandora_doi_datacite_suffix_source', 'pid'),
    '#options' => array('pid' => t('PID'), 'uuid' => t('UUID')),
    '#description' => t("Use either the object's PID or a randomly generated UUID as the DOI suffix."),
  );
  $form['islandora_doi_datacite_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Datacite symbol (username)'),
    '#default_value' => variable_get('islandora_doi_datacite_username', 'CISTI.FOO'),
    '#description' => t("Your institution's DataCite symbol (username)."),
  );
  $form['islandora_doi_datacite_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Datacite password'),
    '#default_value' => variable_get('islandora_doi_datacite_password', ''),
    '#description' => t("Your insitution's DataCite password."),
  );
  $default_replacements = "StillImage|Image\nThesis|Text";
  $form['islandora_doi_datacite_resourcetype_replacements'] = array(
    '#type' => 'textarea',
    '#title' => t('resourceType replacements'),
    '#rows' => 10,
    '#default_value' => variable_get('islandora_doi_datacite_resourcetype_replacements', $default_replacements),
    '#description' => t("DataCite's metadata specification requires that the values of 'resourceType' are from the list 'Audiovisual', 'Collection', 'Dataset', 'Event', 'Image', 'InteractiveResource', 'Model', 'PhysicalObject', 'Service', 'Software', 'Sound', 'Text', 'Workflow', and 'Other'. You can define a list of source|replacement pairs here that maps values in your DC datastream's 'type' element to one of these values. Place each source and replacement value pair, separated by a |, on its own line."),
  );
  $form['islandora_doi_datacite_combine_creator'] = array(
    '#type' => 'checkbox',
    '#title' => t('Combine DC.creator and DC.contributor values'),
    '#default_value' => variable_get('islandora_doi_datacite_combine_creator', 0),
    '#description' => t("Check this option if you want to use both the object's DC.creator
      and DC.contributor values to populate DataCite's reqiured 'creator' element."),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_theme().
 */
function islandora_doi_datacite_theme() {
  return array(
    'datacite_metadata' => array(
      'variables' => array(
        'doi' => NULL,
        'dc' => NULL,
        'publication_year' => NULL,
        'resource_type' => NULL,
      ),
      'path' => drupal_get_path('module', 'islandora_doi_datacite') . '/theme',
      'template' => 'datacite-metadata',
      'file' => 'theme.inc',
    ),
  );
}

/**
 * Implements hook_islandora_doi_framework_mint().
 */
function islandora_doi_datacite_islandora_doi_framework_mint($pid) {
  module_load_include('inc', 'islandora_doi_datacite', 'includes/utilities');
  if ($doi = islandora_doi_datacite_post_new($pid)) {
    return $doi;
  }
  else {
    return FALSE;
  }
}
