<?php

/**
 * @file
 * Module file.
 */

/**
 * Implements hook_menu().
 */
function islandora_doi_datacite_menu() {
  $items = array();
  $items['admin/islandora/tools/islandora_doi_datacite'] = array(
    'title' => 'Islandora DOI DataCite',
    'description' => 'Configure Islandora DOI Datacite module.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_doi_datacite_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Admin settings form builder.
 */
function islandora_doi_datacite_admin_settings() {
  $form['islandora_doi_datacite_api_url'] = array(
    '#type' => 'textfield',
    '#title' => t('API endpoint'),
    '#default_value' => variable_get('islandora_doi_datacite_api_url', 'https://mds.datacite.org/'),
    '#description' => t("The DataCite MDS API endpoint host, including the trailing /. You probably don't need to change this setting."),
  );
  $form['islandora_doi_datacite_prefix'] = array(
    '#type' => 'textfield',
    '#title' => t('DOI prefix'),
    '#default_value' => variable_get('islandora_doi_datacite_prefix', '10.5072/'),
    '#description' => t("Your institution's DOI prefix, including the trailing slash. The test prefix is 10.5072/."),
  );
  $form['islandora_doi_datacite_suffix_source'] = array(
    '#type' => 'radios',
    '#title' => t('Source of DOI suffix'),
    '#default_value' => variable_get('islandora_doi_datacite_suffix_source', 'pid'),
    '#options' => array('pid' => t('PID'), 'uuid' => t('UUID')),
    '#description' => t("Use either the object's PID or a randomly generated UUID as the DOI suffix."),
  );
  $form['islandora_doi_datacite_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Datacite symbol (username)'),
    '#default_value' => variable_get('islandora_doi_datacite_username', 'CISTI.FOO'),
    '#description' => t("Your institution's DataCite symbol (username)."),
  );
  $form['islandora_doi_datacite_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Datacite password'),
    '#default_value' => variable_get('islandora_doi_datacite_password', ''),
    '#description' => t("Your insitution's DataCite password."),
  );
  $form['islandora_doi_datacite_combine_creator'] = array(
    '#type' => 'checkbox',
    '#title' => t('Combine DC.creator and DC.contributor values'),
    '#default_value' => variable_get('islandora_doi_datacite_combine_creator', 0),
    '#description' => t("Check this option if you want to use both the object's DC.creator
      and DC.contributor values to populate DataCite's reqiured 'creator' element."),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_theme().
 */
function islandora_doi_datacite_theme() {
  return array(
    'datacite_metadata' => array(
      'variables' => array(
        'doi' => NULL,
        'dc_values' => NULL,
        'title' => NULL,
        'creator' => NULL,
        'publication_year' => NULL,
        'publisher' => NULL,
        'resource_type' => NULL,
      ),
      'path' => drupal_get_path('module', 'islandora_doi_datacite') . '/theme',
      'template' => 'datacite-metadata',
      'file' => 'theme.inc',
    ),
  );
}

/**
 * Implements hook_islandora_doi_framework_mint().
 */
function islandora_doi_datacite_islandora_doi_framework_mint($pid, $form, $form_state) {
  module_load_include('inc', 'islandora_doi_datacite', 'includes/utilities');
  if ($doi = islandora_doi_datacite_post_new($pid, $form, $form_state)) {
    return $doi;
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_islandora_doi_framework_update().
 */
function islandora_doi_datacite_islandora_doi_framework_update($pid, $doi, $form, $form_state) {
  module_load_include('inc', 'islandora_doi_datacite', 'includes/utilities');
  if (islandora_doi_datacite_update_doi($pid, $doi, $form_state)) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_form_alter().
 */
function islandora_doi_datacite_form_islandora_doi_framework_manage_doi_alter(&$form, $form_state, $form_id) {
  $form['islandora_doi_datacite_metadata_overview'] = array(
    '#markup' => '<p>' . t("DataCite requires the following elements in the metadata accompanying the DOI. The values below are taken from this object's DC description. If subject, language, and description are present in this object's Dublin Core description, they are also added to the DataCite metadata.") . '</p>',
  );

  module_load_include('inc', 'islandora_doi_datacite', 'includes/utilities');
  $pid = $form['islandora_doi_pid']['#value'];
  $object = islandora_object_load($pid);
  $dc_values = islandora_doi_datacite_get_dc_values($object['DC']->content);

  $title = implode('; ', $dc_values['title']);
  $form['islandora_doi_datacite_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#default_value' => $title,
    '#required' => TRUE,
  );

  if (variable_get('islandora_doi_datacite_combine_creator', 0)) {
    $dc_values['creator'] = isset($dc_values['creator']) ? $dc_values['creator'] : array();
    $dc_values['contributor'] = isset($dc_values['contributor']) ? $dc_values['contributor'] : array();
    $creators = array_merge($dc_values['creator'], $dc_values['contributor']);
  }
  else {
    $creators = isset($dc_values['creator']) ? $dc_values['creator'] : array();
  }

  $creator = implode('; ', $creators);
  $form['islandora_doi_datacite_creator'] = array(
    '#type' => 'textfield',
    '#title' => t('Creator'),
    '#default_value' => $creator,
    '#description' => t("Separate multiple creators with semicolons."),
    '#required' => TRUE,
  );
  $dates = isset($dc_values['date']) ? $dc_values['date'] : array();
  $date = implode('; ', $dates);
  $form['islandora_doi_datacite_date'] = array(
    '#type' => 'textfield',
    '#title' => t('Date'),
    '#default_value' => $date,
    '#description' => t("Must be a single year in YYYY format."),
    '#required' => TRUE,
  );
  $publishers = isset($dc_values['publisher']) ? $dc_values['publisher'] : array();
  $publisher = implode('; ', $publishers);
  $form['islandora_doi_datacite_publisher'] = array(
    '#type' => 'textfield',
    '#title' => t('Publisher'),
    '#default_value' => $publisher,
    '#description' => t("Must be a single publisher."),
    '#required' => TRUE,
  );
  $resourcetype_values = array(
    'Audiovisual' => 'Audiovisual', 'Collection' => 'Collection', 'Dataset' => 'Dataset',
    'Event' => 'Event', 'Image' => 'Image', 'InteractiveResource' => 'InteractiveResource',
    'Model' => 'Model', 'PhysicalObject' => 'PhysicalObject', 'Service' => 'Service',
    'Software' => 'Software', 'Sound' => 'Sound', 'Text' => 'Text', 'Workflow' => 'Workflow',
    'Other' => 'Other',
  );
  $form['islandora_doi_datacite_resourcetype'] = array(
    '#type' => 'select',
    '#title' => t("Resource type"),
    '#options' => $resourcetype_values,
    '#required' => TRUE,
  );
}

/**
 * Implements hook_islandora_doi_framework_form_handlers().
 */
function islandora_doi_datacite_islandora_doi_framework_form_handlers() {
  return array(
    'assign_doi' => array(
      'validate' => array('islandora_doi_datacite_validate_publication_year'),
      'submit' => array(),
    ),
    'update_doi' => array(
      'validate' => array(),
      'submit' => array(),
    ),
  );
}

/**
 * Form validation function.
 */
function islandora_doi_datacite_validate_publication_year($form, &$form_state) {
  if (!preg_match('/^\d\d\d\d$/', $form_state['values']['islandora_doi_datacite_date'])) {
    form_set_error('islandora_doi_datacite_date', t('The date must be in YYYY format.'));
  }
}

/**
 * Implements hook_islandora_derivative().
 */
function islandora_doi_datacite_islandora_derivative(AbstractObject $object, $ds_modified_params = array()) {
  $derivatives[] = array(
    'source_dsid' => 'DC',
    'force' => TRUE,
    'weight' => '10',
    'function' => array(
      'islandora_doi_datacite_autoassign_doi',
    ),
    'file' => drupal_get_path('module', 'islandora_doi_datacite') . '/includes/utilities.inc',
  );
  return $derivatives;
}
